import { HighlightStyle } from "@codemirror/language"
import { tags as t } from "@lezer/highlight"
export const ui = {
  "&": {
    color: "var(--text-editor-line)",
    backgroundColor: "var(--text-editor-fill)",
    fontFamily: "var(--text-editor-family-code)",
    fontSize: "var(--text-editor-font-size)",
  },
  ".cm-content": {
    caretColor: "var(--text-editor-cursor-fill)",
  },
  ".cm-cursor, .cm-dropCursor": {
    borderLeft: "var(--text-editor-cursor-fill)",
  },
  ".cm-selectionBackground, .cm-content ::selection": {
    backgroundColor: "var(--text-editor-selection-fill)",
    color: "var(--text-editor-selection-line)",
  },
  ".cm-activeLine": {
    backgroundColor: "var(--text-editor-active-line-fill)",
    color: "var(--text-editor-active-line-line)",
  },
  ".cm-activeLineGutter": {
    backgroundColor: "var(--text-editor-active-line-fill--gutter)",
    color: "var(--text-editor-active-line-line--gutter)",
  },
  ".cm-gutters": {
    userSelect: "none",
    backgroundColor: "var(--text-editor-gutter-fill)",
    color: "var(--text-editor-gutter-line)",
    border: "var(--text-editor-gutter-border)",
    fontSize: "var(--text-editor-gutter-font-size)",
  },
  ".cm-gutterElement": {
    userSelect: "none",
    background: "var(--text-editor-gutter-fill--line-numbers)",
    color: "var(--text-editor-gutter-line--line-numbers)",
    fontSize: "var(--text-editor-gutter-font-size--line-numbers)",
    display: "flex",
    placeItems: "center",
    placeContent: "center",
  },
  ".cm-tooltip": {
    backgroundColor: "var(--text-editor-tooltip-fill)",
    color: "var(--text-editor-tooltip-color)",
  },
  ".cm-panel.cm-search": {
    backgroundColor: "#e3f6ff",
  },
  ".cm-scroller": {
    fontFamily: "var(--text-editor-family)",
    lineHeight: "var(--text-editor-line-height)",
  },
  ".cm-highlightTab": {},
  ".cm-highlightSpace": {},
}

export const syntax = HighlightStyle.define(
  [
    {
      tag: t.comment,
      color: "var(--syntax-comment)",
      fontStyle: "var(--syntax-style-comment)",
      backgroundColor: "var(--syntax-fill-comment)",
      fontWeight: "var(--syntax-weight-comment)",
    },
    {
      tag: t.lineComment,
      color: "var(--syntax-line-comment)",
      fontStyle: "var(--syntax-style-line-comment)",
      backgroundColor: "var(--syntax-fill-line-comment)",
      fontWeight: "var(--syntax-weight-line-comment)",
    },
    {
      tag: t.blockComment,
      color: "var(--syntax-block-comment)",
      fontStyle: "var(--syntax-style-block-comment)",
      backgroundColor: "var(--syntax-fill-block-comment)",
      fontWeight: "var(--syntax-weight-block-comment)",
    },
    {
      tag: t.docComment,
      color: "var(--syntax-doc-comment)",
      fontStyle: "var(--syntax-style-doc-comment)",
      backgroundColor: "var(--syntax-fill-doc-comment)",
      fontWeight: "var(--syntax-weight-doc-comment)",
    },
    {
      tag: t.meta,
      color: "var(--syntax-meta)",
      fontStyle: "var(--syntax-style-meta)",
      backgroundColor: "var(--syntax-fill-meta)",
      fontWeight: "var(--syntax-weight-meta)",
    },
    {
      tag: t.invalid,
      color: "var(--syntax-invalid)",
      fontStyle: "var(--syntax-style-invalid)",
      backgroundColor: "var(--syntax-fill-invalid)",
      fontWeight: "var(--syntax-weight-invalid)",
    },
    {
      tag: t.operator,
      color: "var(--syntax-operator)",
      fontStyle: "var(--syntax-style-operator)",
      backgroundColor: "var(--syntax-fill-operator)",
      fontWeight: "var(--syntax-weight-operator)",
    },
    {
      tag: t.punctuation,
      color: "var(--syntax-punctuation)",
      fontStyle: "var(--syntax-style-punctuation)",
      backgroundColor: "var(--syntax-fill-punctuation)",
      fontWeight: "var(--syntax-weight-punctuation)",
    },
    {
      tag: t.bool,
      color: "var(--syntax-bool)",
      fontStyle: "var(--syntax-style-bool)",
      backgroundColor: "var(--syntax-fill-bool)",
      fontWeight: "var(--syntax-weight-bool)",
    },
    {
      tag: t.atom,
      color: "var(--syntax-atom)",
      fontStyle: "var(--syntax-style-atom)",
      backgroundColor: "var(--syntax-fill-atom)",
      fontWeight: "var(--syntax-weight-atom)",
    },
    {
      tag: t.special(t.variableName),
      color: "var(--syntax-special--variable-name)",
      fontStyle: "var(--syntax-style-special--variable-name)",
      backgroundColor: "var(--syntax-fill-special--variable-name)",
      fontWeight: "var(--syntax-weight-special--variable-name)",
    },
    {
      tag: t.keyword,
      color: "var(--syntax-keyword)",
      fontStyle: "var(--syntax-style-keyword)",
      backgroundColor: "var(--syntax-fill-keyword)",
      fontWeight: "var(--syntax-weight-keyword)",
    },
    {
      tag: t.controlKeyword,
      color: "var(--syntax-control-keyword)",
      fontStyle: "var(--syntax-style-control-keyword)",
      backgroundColor: "var(--syntax-fill-control-keyword)",
      fontWeight: "var(--syntax-weight-control-keyword)",
    },
    {
      tag: t.moduleKeyword,
      color: "var(--syntax-module-keyword)",
      fontStyle: "var(--syntax-style-module-keyword)",
      backgroundColor: "var(--syntax-fill-module-keyword)",
      fontWeight: "var(--syntax-weight-module-keyword)",
    },
    {
      tag: t.typeName,
      color: "var(--syntax-type-name)",
      fontStyle: "var(--syntax-style-type-name)",
      backgroundColor: "var(--syntax-fill-type-name)",
      fontWeight: "var(--syntax-weight-type-name)",
    },
    {
      tag: t.className,
      color: "var(--syntax-class-name)",
      fontStyle: "var(--syntax-style-class-name)",
      backgroundColor: "var(--syntax-fill-class-name)",
      fontWeight: "var(--syntax-weight-class-name)",
    },
    {
      tag: t.typeOperator,
      color: "var(--syntax-type-operator)",
      fontStyle: "var(--syntax-style-type-operator)",
      backgroundColor: "var(--syntax-fill-type-operator)",
      fontWeight: "var(--syntax-weight-type-operator)",
    },
    {
      tag: t.function(t.variableName),
      color: "var(--syntax-function--variable-name)",
      fontStyle: "var(--syntax-style-function--variable-name)",
      backgroundColor: "var(--syntax-fill-function--variableName)",
      fontWeight: "var(--syntax-weight-function--variableName)",
    },
    {
      tag: t.function(t.propertyName),
      color: "var(--syntax-function--property-name)",
      fontStyle: "var(--syntax-style-function--property-name)",
      backgroundColor: "var(--syntax-fill-function--property-name)",
      fontWeight: "var(--syntax-weight-function--property-name)",
    },
    {
      tag: t.variableName,
      color: "var(--syntax-variable-name)",
      fontStyle: "var(--syntax-style-variable-name)",
      backgroundColor: "var(--syntax-fill-variable-name)",
      fontWeight: "var(--syntax-weight-variable-name)",
    },
    {
      tag: t.definition(t.variableName),
      color: "var(--syntax-definition--variable-name)",
      fontStyle: "var(--syntax-style-definition--variable-name)",
      backgroundColor: "var(--syntax-fill-definition--variable-name)",
      fontWeight: "var(--syntax-weight-definition--variable-name)",
    },
    {
      tag: t.string,
      color: "var(--syntax-string)",
      backgroundColor: "var(--syntax-fill-string)",
      fontStyle: "var(--syntax-style-string)",
      fontWeight: "var(--syntax-weight-string)",
    },
    {
      tag: t.number,
      color: "var(--syntax-number)",
      backgroundColor: "var(--syntax-fill-number)",
      fontStyle: "var(--syntax-style-number)",
      fontWeight: "var(--syntax-weight-number)",
    },
    {
      tag: t.integer,
      color: "var(--syntax-integer)",
      backgroundColor: "var(--syntax-fill-integer)",
      fontStyle: "var(--syntax-style-integer)",
      fontWeight: "var(--syntax-weight-integer)",
    },
    {
      tag: t.float,
      color: "var(--syntax-float)",
      backgroundColor: "var(--syntax-fill-float)",
      fontStyle: "var(--syntax-style-float)",
      fontWeight: "var(--syntax-weight-float)",
    },
    {
      tag: t.escape,
      color: "var(--syntax-escape)",
      fontStyle: "var(--syntax-style-escape)",
      backgroundColor: "var(--syntax-fill-escape)",
      fontWeight: "var(--syntax-weight-escape)",
    },
    {
      tag: t.regexp,
      color: "var(--syntax-regexp)",
      fontStyle: "var(--syntax-style-regexp)",
      backgroundColor: "var(--syntax-fill-regexp)",
      fontWeight: "var(--syntax-weight-regexp)",
    },
    {
      tag: t.special(t.string),
      color: "var(--syntax-special--string)",
      fontStyle: "var(--syntax-style-special--string)",
      backgroundColor: "var(--syntax-fill-special--string)",
      fontWeight: "var(--syntax-weight-special--string)",
    },
    {
      tag: t.tagName,
      color: "var(--syntax-tag-name)",
      fontStyle: "var(--syntax-style-tag-name)",
      backgroundColor: "var(--syntax-fill-tag-name)",
      fontWeight: "var(--syntax-weight-tag-name)",
    },
    {
      tag: t.angleBracket,
      color: "var(--syntax-angle-bracket)",
      fontStyle: "var(--syntax-style-angle-bracket)",
      backgroundColor: "var(--syntax-fill-angle-bracket)",
      fontWeight: "var(--syntax-weight-angle-bracket)",
    },
    {
      tag: t.attributeName,
      color: "var(--syntax-attribute-name)",
      backgroundColor: "var(--syntax-fill-attribute-name)",
      fontWeight: "var(--syntax-weight-attribute-name)",
      fontStyle: "var(--syntax-style-attribute-name)",
    },
    {
      tag: t.namespace,
      color: "var(--syntax-namespace)",
      fontStyle: "var(--syntax-style-namespace)",
      backgroundColor: "var(--syntax-fill-namespace)",
      fontWeight: "var(--syntax-weight-namespace)",
    },

    {
      tag: t.strong,

      color: "var(--syntax-strong)",
      backgroundColor: "var(--syntax-fill-strong)",
      fontStyle: "var(--syntax-style-strong)",
      fontWeight: "var(--syntax-weight-strong)",
    },
    {
      tag: t.emphasis,
      color: "var(--syntax-emphasis)",
      backgroundColor: "var(--syntax-fill-emphasis)",
      fontWeight: "var(--syntax-weight-emphasis)",
      fontStyle: "var(--syntax-style-emphasis)",
    },
    {
      tag: t.heading,
      color: "var(--syntax-heading)",
      backgroundColor: "var(--syntax-fill-heading)",
      fontStyle: "var(--syntax-style-heading)",
      fontWeight: "var(--syntax-weight-heading)",
    },
    {
      tag: t.link,
      color: "var(--syntax-link)",
      backgroundColor: "var(--syntax-fill-link)",
      fontStyle: "var(--syntax-style-link)",
      fontWeight: "var(--syntax-weight-link)",
      textDecoration: "underline",
    },
    {
      tag: t.quote,
      color: "var(--syntax-quote)",
      backgroundColor: "var(--syntax-fill-quote)",
      fontStyle: "var(--syntax-style-quote)",
      fontWeight: "var(--syntax-weight-quote)",
    },
    {
      tag: t.list,
      color: "var(--syntax-list)",
      backgroundColor: "var(--syntax-fill-list)",
      fontStyle: "var(--syntax-style-list)",
      fontWeight: "var(--syntax-weight-list)",
    },

    {
      tag: t.inserted,
      color: "var(--syntax-inserted)",
      backgroundColor: "var(--syntax-fill-inserted)",
      fontStyle: "var(--syntax-style-inserted)",
      fontWeight: "var(--syntax-weight-inserted)",
    },
    {
      tag: t.deleted,
      color: "var(--syntax-deleted)",
      backgroundColor: "var(--syntax-fill-deleted)",
      fontStyle: "var(--syntax-style-deleted)",
      fontWeight: "var(--syntax-weight-deleted)",
    },
    {
      tag: t.changed,
      color: "var(--syntax-changed)",
      backgroundColor: "var(--syntax-fill-changed)",
      fontStyle: "var(--syntax-style-changed)",
      fontWeight: "var(--syntax-weight-changed)",
    },
    {
      tag: t.contentSeparator,
      color: "var(--syntax-content-separator)",
      backgroundColor: "var(--syntax-fill-content-separator)",
      fontStyle: "var(--syntax-style-content-separator)",
      fontWeight: "var(--syntax-weight-content-separator)",
    },
  ],
)
